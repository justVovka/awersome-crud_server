openapi: 3.0.1
info:
  title: Awersome CRUD API
  description: API для работы с сервисом.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: Локальный сервер

paths:
  /users:
    get:
      summary: Возвращает список всех пользователей
      responses:
        '200':
          description: JSON массив всех пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Добавляет нового пользователя
      requestBody:
        description: Новый пользователь
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUser'
      responses:
        '201':
          description: Пользователь усппешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: New user created successfully
        '400':
          description: Ошибка заполнения тела запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Property "id" is required
  /users/{userId}:
    get:
      summary: Возвращает пользователяя с заданным userId
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: ID поле формата uuid нужного пользователя
      responses:
        '200':
          description: Один пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователя с таким ID не существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: User with this ID does not exist
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'John'
        surname:
          type: string
          example: 'Doe'
        birthdate:
          type: string
          format: date
        profession:
          type: string
          example: 'Web Developer'
    PostUser:
      type: object
      required:
        - id
        - name
        - surname
        - birthdate
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: 'John'
        surname:
          type: string
          example: 'Doe'
        birthdate:
          type: string
          format: date
        profession:
          type: string
          example: 'Web Developer'
